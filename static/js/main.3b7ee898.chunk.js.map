{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","setCurrentPage","pageNumbers","Math","ceil","isFirstPage","lastPage","length","isLastPage","className","cn","disabled","onClick","current","href","map","pageNumber","active","App","useState","itemsPerPage","setItemsPerPage","firstItemIndex","lastItemIndex","currentItems","slice","id","value","onChange","event","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCKIG,EAA6B,SAAC,GAMpC,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,aACAC,EACI,EADJA,eAGMC,EAAcZ,EAAW,EADTa,KAAKC,KAAKP,EAAQC,IAGlCO,EAAcN,IAAgBG,EAAY,GAC1CI,EAAWJ,EAAYA,EAAYK,OAAS,GAC5CC,EAAaT,IAAgBO,EAkBnC,OACE,qBAAIG,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAAUN,IAFd,SAKE,mBACE,UAAQ,WACRI,UAAU,YACVG,QA1BW,WACjBX,GAAe,SAAAY,GACb,OAAmB,IAAZA,EACHA,EAAU,EACVA,MAuBAC,KAAK,QACL,gBAAeT,EALjB,oBAWDH,EAAYa,KAAI,SAAAC,GAAU,OACzB,oBAEEP,UAAWC,IACT,YACA,CAAEO,OAAQD,IAAejB,IAJ7B,SAOE,mBACE,UAAQ,WACRU,UAAU,YACVG,QAAS,kBAAMZ,EAAagB,IAC5BF,KAAI,WAAME,GAJZ,SAMGA,KAZEA,MAiBT,oBAAIP,UAAWC,IACb,YACA,CAAEC,SAAUH,IAFd,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,QArDW,WACjBX,GAAe,SAAAY,GACb,OAAOA,IAAYP,EACfO,EAAU,EACVA,MAkDAC,KAAK,QACL,gBAAeN,EALjB,wBC/EKU,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBE,EAApB,KACA,EAAgBkB,mBAAS,IAAlBtB,EAAP,oBAKMyB,EAAiBvB,EAAcqB,EAAeA,EAC9CG,EAAgBxB,EAAcqB,GAAgBvB,EAChDE,EAAcqB,EACdvB,EAEE2B,EARQlC,EAAW,EAAGO,GACzBkB,KAAI,SAAArB,GAAC,qBAAYA,MAOO+B,MAAMH,EAAgBC,GAWjD,OACE,sBAAKd,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACG,eAAQV,EAAR,sBACWuB,EAAiB,EAD5B,cACmCC,EADnC,eACuD1B,EADvD,OAIH,sBAAKY,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAOP,EACPQ,SArBW,SAACC,GACpBR,EAAgBS,OAAOD,EAAME,OAAOJ,QACpC1B,EAAe,IAcT,UAOE,wBAAQ0B,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEZ,MAAOA,EACPC,QAASsB,EACTrB,YAAaA,EACbC,aA3Ce,SAACgB,GACpBf,EAAee,IA2CXf,eAAgBA,IAGlB,6BACGuB,EAAaT,KAAI,SAAAkB,GAAI,OACpB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCnEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.3b7ee898.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { Dispatch, SetStateAction } from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (number:number) => void;\n  setCurrentPage: Dispatch<SetStateAction<number>>;\n};\n\nexport const Pagination:React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n  setCurrentPage,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pageNumbers = getNumbers(1, numberOfPages);\n\n  const isFirstPage = currentPage === pageNumbers[0];\n  const lastPage = pageNumbers[pageNumbers.length - 1];\n  const isLastPage = currentPage === lastPage;\n\n  const handlePrev = () => {\n    setCurrentPage(current => {\n      return current !== 1\n        ? current - 1\n        : current;\n    });\n  };\n\n  const handleNext = () => {\n    setCurrentPage(current => {\n      return current !== lastPage\n        ? current + 1\n        : current;\n    });\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn(\n        'page-item',\n        { disabled: isFirstPage },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          onClick={handlePrev}\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pageNumbers.map(pageNumber => (\n        <li\n          key={pageNumber}\n          className={cn(\n            'page-item',\n            { active: pageNumber === currentPage },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            onClick={() => onPageChange(pageNumber)}\n            href={`#${pageNumber}`}\n          >\n            {pageNumber}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn(\n        'page-item',\n        { disabled: isLastPage },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          onClick={handleNext}\n          href=\"#next\"\n          aria-disabled={isLastPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [total] = useState(42);\n\n  const items = getNumbers(1, total)\n    .map(n => `Item ${n}`);\n\n  const firstItemIndex = currentPage * itemsPerPage - itemsPerPage;\n  const lastItemIndex = currentPage * itemsPerPage <= total\n    ? currentPage * itemsPerPage\n    : total;\n\n  const currentItems = items.slice(firstItemIndex, lastItemIndex);\n\n  const onPageChange = (pageNumber:number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const handleSelect = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} `\n        + `(items ${firstItemIndex + 1} - ${lastItemIndex} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleSelect}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n        setCurrentPage={setCurrentPage}\n      />\n\n      <ul>\n        {currentItems.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n\n        ))}\n      </ul>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}